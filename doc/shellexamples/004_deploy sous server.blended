
bash-3.2$ sous config
StateLocation: /Users/ssalisbury/.local/share/sous/state
Server: ""
SiblingURLs: {}
BuildStateDir: ""
Docker:
  RegistryHost: 192.168.99.100:5000
  DatabaseDriver: sqlite3_sous
  DatabaseConnection: file:dummy.db?mode=memory&cache=shared
User:
  Name: ""
  Email: ""
bash-3.2$ cat ~/.config/sous/config.yaml
Docker:
  RegistryHost: 192.168.99.100:5000
bash-3.2$ git clone ssh://root@192.168.99.100:2222/repos/sous-server
Cloning into 'sous-server'...
Warning: Permanently added '[192.168.99.100]:2222' (ECDSA) to the list of known hosts.
bash-3.2$ pushd sous-server
/tmp/sous-work/sous-server /tmp/sous-work
bash-3.2$ export SOUS_USER_NAME=test SOUS_USER_EMAIL=test@test.com
bash-3.2$ export SOUS_SERVER= SOUS_STATE_LOCATION=/tmp/sous-work/gdm
bash-3.2$ 
bash-3.2$ sous init
warn: No server set, Sous is running in server or workstation mode.
warn: Configure a server like this: sous config server http://some.sous.server
warn: Using local state stored at /tmp/sous-work/gdm
Source: 192.168.99.100/2222/repos/sous-server
Owners: []
Kind: http-service
Deployments:
  left:
    Resources:
      cpus: "0.1"
      memory: "100"
      ports: "1"
    NumInstances: 1
    Volumes: []
    Version: 0.0.0
  right:
    Resources:
      cpus: "0.1"
      memory: "100"
      ports: "1"
    NumInstances: 1
    Volumes: []
    Version: 0.0.0
bash-3.2$ sous manifest get
warn: No server set, Sous is running in server or workstation mode.
warn: Configure a server like this: sous config server http://some.sous.server
warn: Using local state stored at /tmp/sous-work/gdm
source: 192.168.99.100/2222/repos/sous-server
owners: []
kind: http-service
deployments:
  left:
    resources:
      cpus: "0.1"
      memory: "100"
      ports: "1"
    numinstances: 1
    volumes: []
    version: 0.0.0
  right:
    resources:
      cpus: "0.1"
      memory: "100"
      ports: "1"
    numinstances: 1
    volumes: []
    version: 0.0.0

bash-3.2$ sous manifest set < ~/templated-configs/sous-server.yaml
warn: No server set, Sous is running in server or workstation mode.
warn: Configure a server like this: sous config server http://some.sous.server
warn: Using local state stored at /tmp/sous-work/gdm

bash-3.2$ sous manifest get # demonstrating this got to GDM
warn: No server set, Sous is running in server or workstation mode.
warn: Configure a server like this: sous config server http://some.sous.server
warn: Using local state stored at /tmp/sous-work/gdm
source: 192.168.99.100/2222/repos/sous-server
owners:
- test@test.com
kind: http-service
deployments:
  left:
    resources:
      cpus: "0.1"
      memory: "100"
      ports: "1"
    env:
      GDM_REPO: ssh://root@192.168.99.100:2222/repos/gdm
      SOUS_DOCKER_REGISTRY_HOST: 192.168.99.100:5000
    numinstances: 1
    volumes: []
    version: 0.0.0
  right:
    resources:
      cpus: "0.1"
      memory: "100"
      ports: "1"
    env:
      GDM_REPO: ssh://root@192.168.99.100:2222/repos/gdm
      SOUS_DOCKER_REGISTRY_HOST: 192.168.99.100:5000
    numinstances: 1
    volumes: []
    version: 0.0.0

bash-3.2$ 
bash-3.2$ # Last minute config
bash-3.2$ cat Dockerfile
FROM golang:1.7

# Add deploy key.
COPY ./key_sous@example.com /root/.ssh/id_rsa
COPY ./known_hosts /root/.ssh/known_hosts
COPY ./docker.crt /docker.crt

RUN chmod -R og-rwx /root/.ssh

COPY ./sous /go/bin/sous

COPY main.go /go/src/github.com/opentable/sous-server/
WORKDIR /go/src/github.com/opentable/sous-server
RUN go install -v

# Run sous server.
# NOTE: You must have set PORT0, GDM_REPO
CMD /go/bin/sous-server
bash-3.2$ cp ~/dot-ssh/git_pubkey_rsa key_sous@example.com
bash-3.2$ cp /Users/ssalisbury/go/src/github.com/opentable/sous/dev_support/$<ury/go/src/github.com/opentable/sous/dev_support/$(                         readlink /Users/ssalisbur<table/sous/dev_support/$(readlink /Users/ssalisbury                         /go/src/github.com/openta<eadlink /Users/ssalisbury/go/src/github.com/opentab                         le/sous/dev_support/sous_<go/src/github.com/opentable/sous/dev_support/sous_l                         inux) .
bash-3.2$ cp /Users/ssalisbury/go/src/github.com/opentable/sous/integration/t<ury/go/src/github.com/opentable/sous/integration/te                         st-registry/docker-regist<table/sous/integration/test-registry/docker-registr                         y/testing.crt docker.crt
bash-3.2$ 
bash-3.2$ ls -a
.
..
.git
Dockerfile
docker.crt
key_sous@example.com
main.go
sous
sous-server.yaml
bash-3.2$ ssh-keyscan -p 2222 192.168.99.100 > known_hosts
# 192.168.99.100:2222 SSH-2.0-OpenSSH_7.2p2-hpn14v4
# 192.168.99.100:2222 SSH-2.0-OpenSSH_7.2p2-hpn14v4
# 192.168.99.100:2222 SSH-2.0-OpenSSH_7.2p2-hpn14v4
bash-3.2$ 
bash-3.2$ git add key_sous@example.com known_hosts sous
bash-3.2$ git commit -am "Adding ephemeral files"
[master 754d665] Adding ephemeral files
 3 files changed, 30 insertions(+)
 create mode 100644 key_sous@example.com
 create mode 100644 known_hosts
 create mode 100755 sous
bash-3.2$ git tag -am "0.0.2" 0.0.2
bash-3.2$ git push
Warning: Permanently added '[192.168.99.100]:2222' (ECDSA) to the list of known hosts.
To ssh://192.168.99.100:2222/repos/sous-server
   bdfdd3f..754d665  master -> master
bash-3.2$ git push --tags
Warning: Permanently added '[192.168.99.100]:2222' (ECDSA) to the list of known hosts.
To ssh://192.168.99.100:2222/repos/sous-server
 * [new tag]         0.0.2 -> 0.0.2
bash-3.2$ 
bash-3.2$ sous build
  (Sous)> running docker build .
  (Sous)>   Sending build context to Docker daemon 30.73 MB
  (Sous)>   Step 1 : FROM golang:1.7
  (Sous)>    ---> 6639f812dbc7
  (Sous)>   Step 2 : COPY ./key_sous@example.com /root/.ssh/id_rsa
  (Sous)>    ---> Using cache
  (Sous)>    ---> 81919f889962
  (Sous)>   Step 3 : COPY ./known_hosts /root/.ssh/known_hosts
  (Sous)>    ---> 3664b3c12fce
  (Sous)>   Removing intermediate container 149a71479d9c
  (Sous)>   Step 4 : COPY ./docker.crt /docker.crt
  (Sous)>    ---> 3f0ad63448f4
  (Sous)>   Removing intermediate container 5889cdbee1b4
  (Sous)>   Step 5 : RUN chmod -R og-rwx /root/.ssh
  (Sous)>    ---> Running in ee2d1421faf8
  (Sous)>    ---> 78208bc6ca92
  (Sous)>   Removing intermediate container ee2d1421faf8
  (Sous)>   Step 6 : COPY ./sous /go/bin/sous
  (Sous)>    ---> 995f9b2be822
  (Sous)>   Removing intermediate container 620eeadcbcfe
  (Sous)>   Step 7 : COPY main.go /go/src/github.com/opentable/sous-server/
  (Sous)>    ---> e4df34c8af24
  (Sous)>   Removing intermediate container 1b57e86db4f4
  (Sous)>   Step 8 : WORKDIR /go/src/github.com/opentable/sous-server
  (Sous)>    ---> Running in 3e000da7d67e
  (Sous)>    ---> 4776c7d1b279
  (Sous)>   Removing intermediate container 3e000da7d67e
  (Sous)>   Step 9 : RUN go install -v
  (Sous)>    ---> Running in 22d3ef48df64
  (Sous)>   [91mgithub.com/opentable/sous-server
  (Sous)>   [0m ---> bdf9d596e0b1
  (Sous)>   Removing intermediate container 22d3ef48df64
  (Sous)>   Step 10 : CMD /go/bin/sous-server
  (Sous)>    ---> Running in 9db1eac9f5bd
  (Sous)>    ---> 3b3ca40e5dd6
  (Sous)>   Removing intermediate container 9db1eac9f5bd
  (Sous)>   Successfully built 3b3ca40e5dd6
  (Sous)> running docker build -t 192.168.99.100:5000/192.168.99.100/2222/repos/sous-server:0.0.2 -t 192.168.99.100:5000/192.168.99.100/2222/repos/sous-server:754d6653c6ff2a94bdcc02a333e08985761b5ad1 -
  (Sous)>   Sending build context to Docker daemon 2.048 kB
  (Sous)>   Step 1 : FROM 3b3ca40e5dd6
  (Sous)>    ---> 3b3ca40e5dd6
  (Sous)>   Step 2 : LABEL com.opentable.sous.repo_offset "" com.opentable.sous.repo_url "192.168.99.100/2222/repos/sous-server" com.opentable.sous.revision "754d6653c6ff2a94bdcc02a333e08985761b5ad1" com.opentable.sous.version "0.0.2" com.opentable.sous.advisories "dirty workspace"
  (Sous)>    ---> Running in 9c72d1376267
  (Sous)>    ---> b99766d3d580
  (Sous)>   Removing intermediate container 9c72d1376267
  (Sous)>   Successfully built b99766d3d580
warn: build may not be deployable in all clusters due to advisories:
  dirty workspace
  (Sous)> running docker push 192.168.99.100:5000/192.168.99.100/2222/repos/sous-server:0.0.2
  (Sous)>   The push refers to a repository [192.168.99.100:5000/192.168.99.100/2222/repos/sous-server]
  (Sous)>   27a15148f23f: Preparing
  (Sous)>   4ba17bd34217: Preparing
  (Sous)>   5aab58b85ce1: Preparing
  (Sous)>   9762abc4e746: Preparing
  (Sous)>   fc81061caadf: Preparing
  (Sous)>   7315c86e1059: Preparing
  (Sous)>   4e7ac1e84a1a: Preparing
  (Sous)>   8b77aafa7afb: Preparing
  (Sous)>   988a4cf7bfad: Preparing
  (Sous)>   e6769ace411a: Preparing
  (Sous)>   779900daf86c: Preparing
  (Sous)>   53c779688d06: Preparing
  (Sous)>   60a0858edcd5: Preparing
  (Sous)>   b6ca02dfe5e6: Preparing
  (Sous)>   7315c86e1059: Waiting
  (Sous)>   4e7ac1e84a1a: Waiting
  (Sous)>   8b77aafa7afb: Waiting
  (Sous)>   988a4cf7bfad: Waiting
  (Sous)>   e6769ace411a: Waiting
  (Sous)>   779900daf86c: Waiting
  (Sous)>   53c779688d06: Waiting
  (Sous)>   60a0858edcd5: Waiting
  (Sous)>   b6ca02dfe5e6: Waiting
  (Sous)>   fc81061caadf: Pushed
  (Sous)>   9762abc4e746: Pushed
  (Sous)>   4ba17bd34217: Pushed
  (Sous)>   4e7ac1e84a1a: Layer already exists
  (Sous)>   27a15148f23f: Pushed
  (Sous)>   8b77aafa7afb: Layer already exists
  (Sous)>   988a4cf7bfad: Layer already exists
  (Sous)>   53c779688d06: Layer already exists
  (Sous)>   e6769ace411a: Layer already exists
  (Sous)>   779900daf86c: Layer already exists
  (Sous)>   7315c86e1059: Pushed
  (Sous)>   60a0858edcd5: Layer already exists
  (Sous)>   5aab58b85ce1: Pushed
  (Sous)>   b6ca02dfe5e6: Layer already exists
  (Sous)>   0.0.2: digest: sha256:97dce30d15bd40a72c1f7147dee2a5ab9f786b4484bd94689f41afbb0f013128 size: 3252
  (Sous)> running docker push 192.168.99.100:5000/192.168.99.100/2222/repos/sous-server:754d6653c6ff2a94bdcc02a333e08985761b5ad1
  (Sous)>   The push refers to a repository [192.168.99.100:5000/192.168.99.100/2222/repos/sous-server]
  (Sous)>   27a15148f23f: Preparing
  (Sous)>   4ba17bd34217: Preparing
  (Sous)>   5aab58b85ce1: Preparing
  (Sous)>   9762abc4e746: Preparing
  (Sous)>   fc81061caadf: Preparing
  (Sous)>   7315c86e1059: Preparing
  (Sous)>   4e7ac1e84a1a: Preparing
  (Sous)>   8b77aafa7afb: Preparing
  (Sous)>   988a4cf7bfad: Preparing
  (Sous)>   e6769ace411a: Preparing
  (Sous)>   779900daf86c: Preparing
  (Sous)>   53c779688d06: Preparing
  (Sous)>   60a0858edcd5: Preparing
  (Sous)>   b6ca02dfe5e6: Preparing
  (Sous)>   7315c86e1059: Waiting
  (Sous)>   4e7ac1e84a1a: Waiting
  (Sous)>   8b77aafa7afb: Waiting
  (Sous)>   988a4cf7bfad: Waiting
  (Sous)>   e6769ace411a: Waiting
  (Sous)>   779900daf86c: Waiting
  (Sous)>   53c779688d06: Waiting
  (Sous)>   60a0858edcd5: Waiting
  (Sous)>   b6ca02dfe5e6: Waiting
  (Sous)>   fc81061caadf: Layer already exists
  (Sous)>   5aab58b85ce1: Layer already exists
  (Sous)>   9762abc4e746: Layer already exists
  (Sous)>   7315c86e1059: Layer already exists
  (Sous)>   4ba17bd34217: Layer already exists
  (Sous)>   27a15148f23f: Layer already exists
  (Sous)>   4e7ac1e84a1a: Layer already exists
  (Sous)>   8b77aafa7afb: Layer already exists
  (Sous)>   e6769ace411a: Layer already exists
  (Sous)>   b6ca02dfe5e6: Layer already exists
  (Sous)>   53c779688d06: Layer already exists
  (Sous)>   988a4cf7bfad: Layer already exists
  (Sous)>   779900daf86c: Layer already exists
  (Sous)>   60a0858edcd5: Layer already exists
  (Sous)>   754d6653c6ff2a94bdcc02a333e08985761b5ad1: digest: sha256:97dce30d15bd40a72c1f7147dee2a5ab9f786b4484bd94689f41afbb0f013128 size: 3252
  (Sous)> [recording "192.168.99.100:5000/192.168.99.100/2222/repos/sous-server:0.0.2" as the docker name for "192.168.99.100/2222/repos/sous-server,0.0.2+754d6653c6ff2a94bdcc02a333e08985761b5ad1"]
Built: "192.168.99.100:5000/192.168.99.100/2222/repos/sous-server:0.0.2"
Advisories:
  dirty workspace
Elapsed: 3.160129491s
bash-3.2$ sous deploy -cluster left # We expect to see 'Sous is running ... i<ter left # We expect to see 'Sous is running ... in                          workstation mode' here:
warn: No server set, Sous is running in server or workstation mode.
warn: Configure a server like this: sous config server http://some.sous.server
warn: Using local state stored at /tmp/sous-work/gdm
Updated global manifest.
2017/03/01 16:30:16 ads.go:38: Getting all requests...
2017/03/01 16:30:16 coaxerconfig.go:15: Running: get requests from cluster "left" (attempt 1)
2017/03/01 16:30:16 coaxerconfig.go:15: Success: get requests from cluster "left" at attempt 1
2017/03/01 16:30:16 ads.go:60: Success: got all requests from cluster "left"
2017/03/01 16:30:16 ads.go:64: Got: 0 requests

bash-3.2$ sous deploy -cluster right
warn: No server set, Sous is running in server or workstation mode.
warn: Configure a server like this: sous config server http://some.sous.server
warn: Using local state stored at /tmp/sous-work/gdm
Updated global manifest.
2017/03/01 16:30:18 ads.go:38: Getting all requests...
2017/03/01 16:30:18 coaxerconfig.go:15: Running: get requests from cluster "right" (attempt 1)
2017/03/01 16:30:18 ads.go:60: Success: got all requests from cluster "right"
2017/03/01 16:30:18 ads.go:64: Got: 1 requests
2017/03/01 16:30:18 coaxerconfig.go:15: Success: get requests from cluster "right" at attempt 1

bash-3.2$ unset SOUS_SERVER
bash-3.2$ unset SOUS_STATE_LOCATION
bash-3.2$ popd
/tmp/sous-work
bash-3.2$ 
bash-3.2$ 